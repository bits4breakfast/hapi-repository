<?php
/**
 * RoomStay
 *
 * PHP version 5
 *
 * @category Class
 * @package  HapiRepository
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * HAPI Repository API
 *
 * API for retrieving objects from HAPI repository
 *
 * The version of the OpenAPI document: 2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace HapiRepository\Model;

use \ArrayAccess;
use \HapiRepository\ObjectSerializer;

/**
 * RoomStay Class Doc Comment
 *
 * @category Class
 * @package  HapiRepository
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RoomStay implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RoomStay';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'room_number' => 'string',
        'status' => 'string',
        'guest_id' => 'string',
        'room_type' => 'string',
        'rate_code' => 'string',
        'market_code' => 'string',
        'channel_code' => 'string',
        'source_code' => 'string',
        'block_code' => 'string',
        'room_count' => 'int',
        'payment_method' => 'string',
        'comp_yn' => 'string',
        'rates' => '\HapiRepository\Model\RoomRate[]',
        'revenue' => '\HapiRepository\Model\Revenue[]',
        'services' => '\HapiRepository\Model\Service[]',
        'promotion_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'room_number' => null,
        'status' => null,
        'guest_id' => null,
        'room_type' => null,
        'rate_code' => null,
        'market_code' => null,
        'channel_code' => null,
        'source_code' => null,
        'block_code' => null,
        'room_count' => 'int32',
        'payment_method' => null,
        'comp_yn' => null,
        'rates' => null,
        'revenue' => null,
        'services' => null,
        'promotion_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'room_number' => 'roomNumber',
        'status' => 'status',
        'guest_id' => 'guestId',
        'room_type' => 'roomType',
        'rate_code' => 'rateCode',
        'market_code' => 'marketCode',
        'channel_code' => 'channelCode',
        'source_code' => 'sourceCode',
        'block_code' => 'blockCode',
        'room_count' => 'roomCount',
        'payment_method' => 'paymentMethod',
        'comp_yn' => 'compYN',
        'rates' => 'rates',
        'revenue' => 'revenue',
        'services' => 'services',
        'promotion_code' => 'promotionCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'room_number' => 'setRoomNumber',
        'status' => 'setStatus',
        'guest_id' => 'setGuestId',
        'room_type' => 'setRoomType',
        'rate_code' => 'setRateCode',
        'market_code' => 'setMarketCode',
        'channel_code' => 'setChannelCode',
        'source_code' => 'setSourceCode',
        'block_code' => 'setBlockCode',
        'room_count' => 'setRoomCount',
        'payment_method' => 'setPaymentMethod',
        'comp_yn' => 'setCompYn',
        'rates' => 'setRates',
        'revenue' => 'setRevenue',
        'services' => 'setServices',
        'promotion_code' => 'setPromotionCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'room_number' => 'getRoomNumber',
        'status' => 'getStatus',
        'guest_id' => 'getGuestId',
        'room_type' => 'getRoomType',
        'rate_code' => 'getRateCode',
        'market_code' => 'getMarketCode',
        'channel_code' => 'getChannelCode',
        'source_code' => 'getSourceCode',
        'block_code' => 'getBlockCode',
        'room_count' => 'getRoomCount',
        'payment_method' => 'getPaymentMethod',
        'comp_yn' => 'getCompYn',
        'rates' => 'getRates',
        'revenue' => 'getRevenue',
        'services' => 'getServices',
        'promotion_code' => 'getPromotionCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['room_number'] = isset($data['room_number']) ? $data['room_number'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['guest_id'] = isset($data['guest_id']) ? $data['guest_id'] : null;
        $this->container['room_type'] = isset($data['room_type']) ? $data['room_type'] : null;
        $this->container['rate_code'] = isset($data['rate_code']) ? $data['rate_code'] : null;
        $this->container['market_code'] = isset($data['market_code']) ? $data['market_code'] : null;
        $this->container['channel_code'] = isset($data['channel_code']) ? $data['channel_code'] : null;
        $this->container['source_code'] = isset($data['source_code']) ? $data['source_code'] : null;
        $this->container['block_code'] = isset($data['block_code']) ? $data['block_code'] : null;
        $this->container['room_count'] = isset($data['room_count']) ? $data['room_count'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['comp_yn'] = isset($data['comp_yn']) ? $data['comp_yn'] : null;
        $this->container['rates'] = isset($data['rates']) ? $data['rates'] : null;
        $this->container['revenue'] = isset($data['revenue']) ? $data['revenue'] : null;
        $this->container['services'] = isset($data['services']) ? $data['services'] : null;
        $this->container['promotion_code'] = isset($data['promotion_code']) ? $data['promotion_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets room_number
     *
     * @return string|null
     */
    public function getRoomNumber()
    {
        return $this->container['room_number'];
    }

    /**
     * Sets room_number
     *
     * @param string|null $room_number Room number for stay
     *
     * @return $this
     */
    public function setRoomNumber($room_number)
    {
        $this->container['room_number'] = $room_number;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets guest_id
     *
     * @return string|null
     */
    public function getGuestId()
    {
        return $this->container['guest_id'];
    }

    /**
     * Sets guest_id
     *
     * @param string|null $guest_id Id of guest associated to stay
     *
     * @return $this
     */
    public function setGuestId($guest_id)
    {
        $this->container['guest_id'] = $guest_id;

        return $this;
    }

    /**
     * Gets room_type
     *
     * @return string|null
     */
    public function getRoomType()
    {
        return $this->container['room_type'];
    }

    /**
     * Sets room_type
     *
     * @param string|null $room_type Code identifying the type of room associated to stay
     *
     * @return $this
     */
    public function setRoomType($room_type)
    {
        $this->container['room_type'] = $room_type;

        return $this;
    }

    /**
     * Gets rate_code
     *
     * @return string|null
     */
    public function getRateCode()
    {
        return $this->container['rate_code'];
    }

    /**
     * Sets rate_code
     *
     * @param string|null $rate_code Code identifying rate for stay
     *
     * @return $this
     */
    public function setRateCode($rate_code)
    {
        $this->container['rate_code'] = $rate_code;

        return $this;
    }

    /**
     * Gets market_code
     *
     * @return string|null
     */
    public function getMarketCode()
    {
        return $this->container['market_code'];
    }

    /**
     * Sets market_code
     *
     * @param string|null $market_code Code identifying marketing type for rate
     *
     * @return $this
     */
    public function setMarketCode($market_code)
    {
        $this->container['market_code'] = $market_code;

        return $this;
    }

    /**
     * Gets channel_code
     *
     * @return string|null
     */
    public function getChannelCode()
    {
        return $this->container['channel_code'];
    }

    /**
     * Sets channel_code
     *
     * @param string|null $channel_code Code identifying source of reservation
     *
     * @return $this
     */
    public function setChannelCode($channel_code)
    {
        $this->container['channel_code'] = $channel_code;

        return $this;
    }

    /**
     * Gets source_code
     *
     * @return string|null
     */
    public function getSourceCode()
    {
        return $this->container['source_code'];
    }

    /**
     * Sets source_code
     *
     * @param string|null $source_code Code identifying source of rate associated to stay
     *
     * @return $this
     */
    public function setSourceCode($source_code)
    {
        $this->container['source_code'] = $source_code;

        return $this;
    }

    /**
     * Gets block_code
     *
     * @return string|null
     */
    public function getBlockCode()
    {
        return $this->container['block_code'];
    }

    /**
     * Sets block_code
     *
     * @param string|null $block_code Group block code
     *
     * @return $this
     */
    public function setBlockCode($block_code)
    {
        $this->container['block_code'] = $block_code;

        return $this;
    }

    /**
     * Gets room_count
     *
     * @return int|null
     */
    public function getRoomCount()
    {
        return $this->container['room_count'];
    }

    /**
     * Sets room_count
     *
     * @param int|null $room_count Number of rooms associated to stay
     *
     * @return $this
     */
    public function setRoomCount($room_count)
    {
        $this->container['room_count'] = $room_count;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return string|null
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param string|null $payment_method Payment method used in the reservation
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets comp_yn
     *
     * @return string|null
     */
    public function getCompYn()
    {
        return $this->container['comp_yn'];
    }

    /**
     * Sets comp_yn
     *
     * @param string|null $comp_yn Is reservation complimentary
     *
     * @return $this
     */
    public function setCompYn($comp_yn)
    {
        $this->container['comp_yn'] = $comp_yn;

        return $this;
    }

    /**
     * Gets rates
     *
     * @return \HapiRepository\Model\RoomRate[]|null
     */
    public function getRates()
    {
        return $this->container['rates'];
    }

    /**
     * Sets rates
     *
     * @param \HapiRepository\Model\RoomRate[]|null $rates rates
     *
     * @return $this
     */
    public function setRates($rates)
    {
        $this->container['rates'] = $rates;

        return $this;
    }

    /**
     * Gets revenue
     *
     * @return \HapiRepository\Model\Revenue[]|null
     */
    public function getRevenue()
    {
        return $this->container['revenue'];
    }

    /**
     * Sets revenue
     *
     * @param \HapiRepository\Model\Revenue[]|null $revenue Details related to revenue
     *
     * @return $this
     */
    public function setRevenue($revenue)
    {
        $this->container['revenue'] = $revenue;

        return $this;
    }

    /**
     * Gets services
     *
     * @return \HapiRepository\Model\Service[]|null
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param \HapiRepository\Model\Service[]|null $services Service or fixed charge related to reservation
     *
     * @return $this
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets promotion_code
     *
     * @return string|null
     */
    public function getPromotionCode()
    {
        return $this->container['promotion_code'];
    }

    /**
     * Sets promotion_code
     *
     * @param string|null $promotion_code A promotion code associated with the reservation
     *
     * @return $this
     */
    public function setPromotionCode($promotion_code)
    {
        $this->container['promotion_code'] = $promotion_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


