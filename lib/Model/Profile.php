<?php
/**
 * Profile
 *
 * PHP version 5
 *
 * @category Class
 * @package  HapiRepository
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * HAPI Repository API
 *
 * API for retrieving objects from HAPI repository
 *
 * The version of the OpenAPI document: 2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace HapiRepository\Model;

use \ArrayAccess;
use \HapiRepository\ObjectSerializer;

/**
 * Profile Class Doc Comment
 *
 * @category Class
 * @package  HapiRepository
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Profile implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Profile';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'property_id' => '\HapiRepository\Model\PropertyId',
        'id' => 'string',
        'type' => 'string',
        'name' => '\HapiRepository\Model\Name',
        'company' => 'string',
        'date_of_birth' => 'string',
        'emails' => '\HapiRepository\Model\Email[]',
        'phones' => '\HapiRepository\Model\Phone[]',
        'addresses' => '\HapiRepository\Model\Address[]',
        'id_documents' => '\HapiRepository\Model\IdDocument[]',
        'loyalty_programs' => '\HapiRepository\Model\LoyaltyProgram[]',
        'creator' => 'string',
        'created_date' => 'string',
        'travel_agent_id' => 'string',
        'preferences' => '\HapiRepository\Model\SpecialRequest[]',
        'comments' => '\HapiRepository\Model\Comment[]',
        'gender' => 'string',
        'hapi_id' => 'string',
        'repository_created' => 'string',
        'repository_updated' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'property_id' => null,
        'id' => null,
        'type' => null,
        'name' => null,
        'company' => null,
        'date_of_birth' => null,
        'emails' => null,
        'phones' => null,
        'addresses' => null,
        'id_documents' => null,
        'loyalty_programs' => null,
        'creator' => null,
        'created_date' => null,
        'travel_agent_id' => null,
        'preferences' => null,
        'comments' => null,
        'gender' => null,
        'hapi_id' => null,
        'repository_created' => null,
        'repository_updated' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'property_id' => 'propertyId',
        'id' => 'id',
        'type' => 'type',
        'name' => 'name',
        'company' => 'company',
        'date_of_birth' => 'dateOfBirth',
        'emails' => 'emails',
        'phones' => 'phones',
        'addresses' => 'addresses',
        'id_documents' => 'idDocuments',
        'loyalty_programs' => 'loyaltyPrograms',
        'creator' => 'creator',
        'created_date' => 'createdDate',
        'travel_agent_id' => 'travelAgentId',
        'preferences' => 'preferences',
        'comments' => 'comments',
        'gender' => 'gender',
        'hapi_id' => 'hapiId',
        'repository_created' => 'repositoryCreated',
        'repository_updated' => 'repositoryUpdated'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'property_id' => 'setPropertyId',
        'id' => 'setId',
        'type' => 'setType',
        'name' => 'setName',
        'company' => 'setCompany',
        'date_of_birth' => 'setDateOfBirth',
        'emails' => 'setEmails',
        'phones' => 'setPhones',
        'addresses' => 'setAddresses',
        'id_documents' => 'setIdDocuments',
        'loyalty_programs' => 'setLoyaltyPrograms',
        'creator' => 'setCreator',
        'created_date' => 'setCreatedDate',
        'travel_agent_id' => 'setTravelAgentId',
        'preferences' => 'setPreferences',
        'comments' => 'setComments',
        'gender' => 'setGender',
        'hapi_id' => 'setHapiId',
        'repository_created' => 'setRepositoryCreated',
        'repository_updated' => 'setRepositoryUpdated'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'property_id' => 'getPropertyId',
        'id' => 'getId',
        'type' => 'getType',
        'name' => 'getName',
        'company' => 'getCompany',
        'date_of_birth' => 'getDateOfBirth',
        'emails' => 'getEmails',
        'phones' => 'getPhones',
        'addresses' => 'getAddresses',
        'id_documents' => 'getIdDocuments',
        'loyalty_programs' => 'getLoyaltyPrograms',
        'creator' => 'getCreator',
        'created_date' => 'getCreatedDate',
        'travel_agent_id' => 'getTravelAgentId',
        'preferences' => 'getPreferences',
        'comments' => 'getComments',
        'gender' => 'getGender',
        'hapi_id' => 'getHapiId',
        'repository_created' => 'getRepositoryCreated',
        'repository_updated' => 'getRepositoryUpdated'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['property_id'] = isset($data['property_id']) ? $data['property_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['date_of_birth'] = isset($data['date_of_birth']) ? $data['date_of_birth'] : null;
        $this->container['emails'] = isset($data['emails']) ? $data['emails'] : null;
        $this->container['phones'] = isset($data['phones']) ? $data['phones'] : null;
        $this->container['addresses'] = isset($data['addresses']) ? $data['addresses'] : null;
        $this->container['id_documents'] = isset($data['id_documents']) ? $data['id_documents'] : null;
        $this->container['loyalty_programs'] = isset($data['loyalty_programs']) ? $data['loyalty_programs'] : null;
        $this->container['creator'] = isset($data['creator']) ? $data['creator'] : null;
        $this->container['created_date'] = isset($data['created_date']) ? $data['created_date'] : null;
        $this->container['travel_agent_id'] = isset($data['travel_agent_id']) ? $data['travel_agent_id'] : null;
        $this->container['preferences'] = isset($data['preferences']) ? $data['preferences'] : null;
        $this->container['comments'] = isset($data['comments']) ? $data['comments'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['hapi_id'] = isset($data['hapi_id']) ? $data['hapi_id'] : null;
        $this->container['repository_created'] = isset($data['repository_created']) ? $data['repository_created'] : null;
        $this->container['repository_updated'] = isset($data['repository_updated']) ? $data['repository_updated'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets property_id
     *
     * @return \HapiRepository\Model\PropertyId|null
     */
    public function getPropertyId()
    {
        return $this->container['property_id'];
    }

    /**
     * Sets property_id
     *
     * @param \HapiRepository\Model\PropertyId|null $property_id property_id
     *
     * @return $this
     */
    public function setPropertyId($property_id)
    {
        $this->container['property_id'] = $property_id;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id Profile identifier
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets name
     *
     * @return \HapiRepository\Model\Name|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param \HapiRepository\Model\Name|null $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets company
     *
     * @return string|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param string|null $company Used to provide company name when name field is used for contact info
     *
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets date_of_birth
     *
     * @return string|null
     */
    public function getDateOfBirth()
    {
        return $this->container['date_of_birth'];
    }

    /**
     * Sets date_of_birth
     *
     * @param string|null $date_of_birth date_of_birth
     *
     * @return $this
     */
    public function setDateOfBirth($date_of_birth)
    {
        $this->container['date_of_birth'] = $date_of_birth;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return \HapiRepository\Model\Email[]|null
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param \HapiRepository\Model\Email[]|null $emails emails
     *
     * @return $this
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets phones
     *
     * @return \HapiRepository\Model\Phone[]|null
     */
    public function getPhones()
    {
        return $this->container['phones'];
    }

    /**
     * Sets phones
     *
     * @param \HapiRepository\Model\Phone[]|null $phones phones
     *
     * @return $this
     */
    public function setPhones($phones)
    {
        $this->container['phones'] = $phones;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \HapiRepository\Model\Address[]|null
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \HapiRepository\Model\Address[]|null $addresses addresses
     *
     * @return $this
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets id_documents
     *
     * @return \HapiRepository\Model\IdDocument[]|null
     */
    public function getIdDocuments()
    {
        return $this->container['id_documents'];
    }

    /**
     * Sets id_documents
     *
     * @param \HapiRepository\Model\IdDocument[]|null $id_documents Identifying document for profile holder
     *
     * @return $this
     */
    public function setIdDocuments($id_documents)
    {
        $this->container['id_documents'] = $id_documents;

        return $this;
    }

    /**
     * Gets loyalty_programs
     *
     * @return \HapiRepository\Model\LoyaltyProgram[]|null
     */
    public function getLoyaltyPrograms()
    {
        return $this->container['loyalty_programs'];
    }

    /**
     * Sets loyalty_programs
     *
     * @param \HapiRepository\Model\LoyaltyProgram[]|null $loyalty_programs Rewards program
     *
     * @return $this
     */
    public function setLoyaltyPrograms($loyalty_programs)
    {
        $this->container['loyalty_programs'] = $loyalty_programs;

        return $this;
    }

    /**
     * Gets creator
     *
     * @return string|null
     */
    public function getCreator()
    {
        return $this->container['creator'];
    }

    /**
     * Sets creator
     *
     * @param string|null $creator User or interface who created the profile
     *
     * @return $this
     */
    public function setCreator($creator)
    {
        $this->container['creator'] = $creator;

        return $this;
    }

    /**
     * Gets created_date
     *
     * @return string|null
     */
    public function getCreatedDate()
    {
        return $this->container['created_date'];
    }

    /**
     * Sets created_date
     *
     * @param string|null $created_date Read-only date and time the profile was created
     *
     * @return $this
     */
    public function setCreatedDate($created_date)
    {
        $this->container['created_date'] = $created_date;

        return $this;
    }

    /**
     * Gets travel_agent_id
     *
     * @return string|null
     */
    public function getTravelAgentId()
    {
        return $this->container['travel_agent_id'];
    }

    /**
     * Sets travel_agent_id
     *
     * @param string|null $travel_agent_id IATA number
     *
     * @return $this
     */
    public function setTravelAgentId($travel_agent_id)
    {
        $this->container['travel_agent_id'] = $travel_agent_id;

        return $this;
    }

    /**
     * Gets preferences
     *
     * @return \HapiRepository\Model\SpecialRequest[]|null
     */
    public function getPreferences()
    {
        return $this->container['preferences'];
    }

    /**
     * Sets preferences
     *
     * @param \HapiRepository\Model\SpecialRequest[]|null $preferences Guest request
     *
     * @return $this
     */
    public function setPreferences($preferences)
    {
        $this->container['preferences'] = $preferences;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return \HapiRepository\Model\Comment[]|null
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param \HapiRepository\Model\Comment[]|null $comments Free text comments
     *
     * @return $this
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender Gender of the guest
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets hapi_id
     *
     * @return string|null
     */
    public function getHapiId()
    {
        return $this->container['hapi_id'];
    }

    /**
     * Sets hapi_id
     *
     * @param string|null $hapi_id UID of the profile in HAPI system
     *
     * @return $this
     */
    public function setHapiId($hapi_id)
    {
        $this->container['hapi_id'] = $hapi_id;

        return $this;
    }

    /**
     * Gets repository_created
     *
     * @return string|null
     */
    public function getRepositoryCreated()
    {
        return $this->container['repository_created'];
    }

    /**
     * Sets repository_created
     *
     * @param string|null $repository_created Repository create date in YYYY-MM-DDThh:mm:ss.sss format
     *
     * @return $this
     */
    public function setRepositoryCreated($repository_created)
    {
        $this->container['repository_created'] = $repository_created;

        return $this;
    }

    /**
     * Gets repository_updated
     *
     * @return string|null
     */
    public function getRepositoryUpdated()
    {
        return $this->container['repository_updated'];
    }

    /**
     * Sets repository_updated
     *
     * @param string|null $repository_updated Repository update date in YYYY-MM-DDThh:mm:ss.sss format
     *
     * @return $this
     */
    public function setRepositoryUpdated($repository_updated)
    {
        $this->container['repository_updated'] = $repository_updated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


