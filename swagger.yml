swagger: '2.0'
host: hapicloud-dev.apigee.net
info:
  version: "2"
  title: HAPI Repository API
  description: API for retrieving objects from HAPI repository
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
basePath: /repository
paths:
  '/reservations/{propertyCode}/{id}':
    get:
      operationId: getReservation
      summary: Get reservation by reservation id
      tags:
        - Reservations
      security:
        - Bearer: []
      parameters:
        - in: path
          name: propertyCode
          required: true
          description: Property code as designated in the PMS
          type: string
        - in: path
          name: id
          required: true
          description: Reservation id generated by the PMS
          type: string
      responses:
        '200':
          description: Reservation in HAPI external data model
          schema:
            $ref: '#/definitions/Reservation'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
          
  /reservations/search:
    post:
      operationId: getReservations
      summary: Get reservations by date range. Paging is included. Maximum value of returned reservations is 1000
      tags:
        - Reservations
      security:
        - Bearer: []
      parameters:
        - in: body
          name: SearchRequest
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: Reservation records with additional info about offset and total count of reservation in repository
          schema:
            allOf:
              - $ref: '#/definitions/RecordSet'
              - properties:
                  entities:
                    type: array
                    items:
                      $ref: '#/definitions/Reservation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
          
  '/stays/{propertyCode}/{reservationId}':
    get:
      operationId: getStays
      summary: Get stays by reservation number
      tags:
        - Stay
      security:
        - Bearer: []
      parameters:
        - in: path
          name: propertyCode
          required: true
          description: Property code as designated in the PMS
          type: string
        - in: path
          name: reservationId
          required: true
          description: PMS Reservation id
          type: string
      responses:
        '200':
          description: Stay record in HAPI data model
          schema:
            $ref: '#/definitions/Stay'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
          
  /stays/search:
    post:
      operationId: searchStays
      summary: Get stays by date range. Paging is included. Maximum value of returned stays is 1000
      tags:
        - Stay
      security:
        - Bearer: []
      parameters:
        - in: body
          name: SearchRequest
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: Repository Stays records with additional info about offset and total count of Stays in repository
          schema:
            allOf:
              - $ref: '#/definitions/RecordSet'
              - properties:
                  entities:
                    type: array
                    items:
                      $ref: '#/definitions/Stay'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
          
  '/profiles/{propertyCode}/{id}':
    get:
      operationId: getProfile
      summary: Get profile by id
      tags:
        - Profile
      security:
        - Bearer: []
      parameters:
        - in: path
          name: propertyCode
          required: true
          description: Property code as designated in the PMS
          type: string
        - in: path
          name: id
          required: true
          description: PMS profile id
          type: string
      responses:
        '200':
          description: Profile in HAPI data model
          schema:
            $ref: '#/definitions/Profile'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
          
  /profiles/search:
    post:
      operationId: getProfiles
      summary: Get profiles by date range. Paging is included. Maximum value of returned profiles is 1000
      tags:
        - Profile
      security:
        - Bearer: []
      parameters:
        - in: body
          name: SearchRequest
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: Repository profile records with additional info about offset and total count of profiles in repository
          schema:
            allOf:
              - $ref: '#/definitions/RecordSet'
              - properties:
                  entities:
                    type: array
                    items:
                      $ref: '#/definitions/Profile'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
  '/rates/{propertyCode}/{rateCode}':
        get:
          operationId: getRate
          summary: Get rate by rateCode
          tags:
            - Rate
          security:
            - Bearer: []
          parameters:
            - in: path
              name: propertyCode
              required: true
              description: Property code as designated in the PMS
              type: string
            - in: path
              name: rateCode
              required: true
              description: Rate code
              type: string
          responses:
            '200':
              description: RateHeader in HAPI data model
              schema:
                $ref: '#/definitions/Rate'
            '401':
              $ref: '#/responses/Unauthorized'
            '404':
              $ref: '#/responses/NotFound'
  /rates/search:
      post:
        operationId: getRates
        summary: Get rates by date range. Paging is included. Maximum value of returned rates is 1000
        tags:
          - Rate
        security:
          - Bearer: []
        parameters:
          - in: body
            name: SearchRequest
            required: true
            schema:
              $ref: '#/definitions/SearchRequest'
        responses:
          '200':
            description: Repository rate records with additional info about offset and total count of rates in repository
            schema:
              allOf:
                - $ref: '#/definitions/RecordSet'
                - properties:
                    entities:
                      type: array
                      items:
                        $ref: '#/definitions/Rate'
          '400':
            $ref: '#/responses/BadRequest'
          '401':
            $ref: '#/responses/Unauthorized'        
  '/allotments/{propertyCode}/{id}':
    get:
      operationId: getAllotment
      summary: Get allotments of specified hotel that defined by chainCode / propertyCode (HAPI internal property identifier) and by blockCode and effectiveDate (Allotment external identifier)
      tags:
        - Allotment
      security:
        - Bearer: []
      parameters:
        - in: path
          name: propertyCode
          required: true
          description: Property code as designated in the PMS
          type: string
        - in: path
          name: id
          required: true
          description: Identifier of allotment record in the external system
          type: string
      responses:
        '200':
          description: Repository allotment record
          schema:
            $ref: '#/definitions/Allotment'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
          
  '/allotments/search/{strategy}':
    post:
      operationId: searchAllotments
      summary: Search allotments by date range. Paging is included. Maximum value of returned allotments is 1000
      tags:
        - Allotment
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - in: path
          name: strategy
          required: true
          description: Type of the search strategy. Could be range or update.<br>In a case of range strategy records will be searched by their effectiveDate / expireDate instead of searching by updated field in a case of update strategy
          type: string
        - in: body
          name: SearchRequest
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: Set of allotment records with additional info about offset and total count of allotments in repository
          schema:
            allOf:
              - $ref: '#/definitions/RecordSet'
              - properties:
                  entities:
                    type: array
                    items:
                      $ref: '#/definitions/Allotment'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
          
responses:
  BadRequest:
    description: Invalid search parameters
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: Object is not found
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Token is invalid
    schema:
      $ref: '#/definitions/Error'
definitions:
  RecordSet:
    title: RecordSet
    type: object
    properties:
      total:
        type: integer
        description: ''
      offset:
        type: integer
        description: ''
      entities:
        type: array
        items:
          type: object
  SearchRequest:
    title: SearchRequest
    type: object
    properties:
      offset:
        type: integer
        description: Offset from the beginning of retrieved values. If no offset value has provided then default (0) will be used
      limit:
        type: integer
        description: Limit of records in the response. If no limit provided default (100) will be used
      fromDate:
        type: string
        format: date-time
        description: Last update date (from) in YYYY-MM-DDThh:mm:ss.sssZ format
      toDate:
        type: string
        format: date-time
        description: Last update date (to) in YYYY-MM-DDThh:mm:ss.sssZ format
      chainCode:
        type: string
        description: Hotel chain code. If left blank, no filtering will be used on this field.
      propertyCode:
        type: string
        description: Hotel property code. If left blank, no filtering will be used on this field.
    required:
      - fromDate
  PropertyId:
        title: PropertyId
        type: object
        description: >-
            Property id in HAPI system
        properties:
            chainCode:
                type: string
                example: HIL
            brandCode:
                type: string
                example: ABVI
            propertyCode:
                type: string
                example: FSDH
            externalPropertyId:
                type: string
                example: 61254
  TimeSpan:
      title: TimeSpan
      type: object
      description: Duration of event
      properties:
          start:
              type: string
              description: begin date of span, in YYYY-MM-DD format
              example: '2018-12-01'
          end:
              type: string
              description: end date of span, in YYYY-MM-DD format
              example: '2018-12-03'
  Reservation:
      title: Reservation
      type: object
      properties:
          propertyId:
              $ref: '#/definitions/PropertyId'
          id:
              type: string
              description: pms reservation id and object key
              example: 542154
          bookingConfirmationId:
              type: string
              description: crs reservation id
              example: L7RR1A
          arrivalDate:
              type: string
              description: 'check-in date, in YYYY-MM-DD format'
              example: '2018-08-23'
          arrivalTime:
              type: string
              description: estimated check-in time
              example: 5:00PM
          departureDate:
              type: string
              description: 'check-out date, in YYYY-MM-DD format'
              example: '2018-08-25'
          creator:
              type: string
              description: user or interface who created the reservation
              example: GARCIA
          createdDate:
              type: string
              description: read-only reservation create date in hotel, in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          cancelledDate:
              type: string
              description: >-
                  Reservation cancellation date in hotel, in YYYY-MM-DDThh:mm:ss.sss
                  format
              example: '2018-06-01T15:34:54.000'
          cancellationNumber:
              type: string
              description: >-
                  cancellation number for reservation. may be supplied externally or
                  returned from pms
              example: CXL12345
          cancellationComment:
              type: string
              description: Cancellation comment why reservation was cancelled
              example: guest walked due to overbook
          adults:
              type: integer
              example: 2
          children:
              type: integer
              example: 1
          status:
              type: string
              enum: [REQUESTED,RESERVED,IN_HOUSE,CANCELLED,CHECKED_OUT,NO_SHOW,WAIT_LIST,UNKNOWN]
              description: current status of reservation
              example: RESERVED
          guests:
              type: array
              items:
                  $ref: '#/definitions/Guest'
          profiles:
              type: array
              items:
                  $ref: '#/definitions/Profile'
          roomStays:
              type: array
              items:
                  $ref: '#/definitions/RoomStay'
          comments:
              type: array
              example: Guest will be arriving by spaceship
              items:
                  $ref: '#/definitions/Comment'
          repositoryCreated:
              type: string
              description: repository create date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          repositoryUpdated:
              type: string
              description: repository update date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
  Stay:
      title: Stay
      type: object
      properties:
          propertyId:
              $ref: '#/definitions/PropertyId'
          reservationId:
              type: string
              description: id of reservation associated with stay
              example: 542154
          roomStay:
              $ref: '#/definitions/RoomStay'
          repositoryCreated:
              type: string
              description: repository create date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          repositoryUpdated:
              type: string
              description: repository update date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
  RoomStay:
      title: RoomStay
      type: object
      properties:
          roomNumber:
              type: string
              description: room number for stay
              example: '122'
          status:
              type: string
              enum: [REQUESTED,RESERVED,IN_HOUSE,CANCELLED,CHECKED_OUT,NO_SHOW,WAIT_LIST,UNKNOWN]
              description: current status of reservation
              example: RESERVED
          guestId:
              type: string
              description: id of guest associated to stay
              example: '5658451'
          roomType:
              type: string
              description: code identifying the type of room associated to stay
              example: KING
          rateCode:
              type: string
              description: code identifying rate for stay
              example: AAA
          marketCode:
              type: string
              description: code identifying marketing type for rate
              example: F
          channelCode:
              type: string
              description: code identifying source of reservation
              example: DM
          sourceCode:
              type: string
              description: code identifying source of rate associated to stay
              example: SRC
          blockCode:
              type: string
              description: group block code
              example: GROUPBLOCK
          roomCount:
              type: integer
              description: number of rooms associated to stay
              example: 1
          paymentMethod:
              type: string
              description: payment method used in the reservation
              example: CA
          compYN:
              type: string
              description: is reservation complimentary
              example: false
          rates:
              type: array
              items:
                  $ref: '#/definitions/RoomRate'
          revenue:
              type: array
              items:
                  $ref: '#/definitions/Revenue'
          services:
              type: array
              items:
                  $ref: '#/definitions/Service'
  Guest:
      title: Guest
      type: object
      description: profile info for guest(s)
      properties:
          profile:
              $ref: '#/definitions/Profile'
          IsPrimary:
              type: boolean
              description: designates if primary guest on reservation
              example: true
  Profile:
      title: Profile
      type: object
      properties:
          propertyId:
              $ref: '#/definitions/PropertyId'
          id:
              type: string
              description: reservation identifier
              example: 542154
          type:
              type: string
              enum: [PERSON,COMPANY,TRAVEL_AGENT,GROUP_PROFILE,OTHER]
              description: type of profile
              example: PERSON
          name:
              $ref: '#/definitions/Name'
          company:
              type: string
              description: used to provide company name when name field is used for contact info
              example: HAPI
          dateOfBirth:
              type: string
              example: '1979-10-31'
          emails:
              type: array
              items:
                  $ref: '#/definitions/Email'
          phones:
              type: array
              items:
                  $ref: '#/definitions/Phone'
          addresses:
              type: array
              items:
                  $ref: '#/definitions/Address'
          idDocuments:
              type: array
              items:
                  $ref: '#/definitions/IdDocument'
          loyaltyPrograms:
              type: array
              items:
                  $ref: '#/definitions/LoyaltyProgram'
          creator:
              type: string
              description: user or interface who created the profile
              example: AFESSE
          createdDate:
              type: string
              description: read-only date and time the profile was created
              example: '2018-05-14T20:02:40.000'
          travelAgentId:
              type: string
              description: IATA number
              example: ABC1234
          repositoryCreated:
              type: string
              description: repository create date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          repositoryUpdated:
              type: string
              description: repository update date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
  Address:
      title: Address
      type: object
      properties:
          type:
              type: string
              description: address type
              example: BUSINESS
          primary:
              type: boolean
              description: primary address flag
              example: true
          address1:
              type: string
              description: first line of address. typically contains street info
              example: '1234 Park Ave'
          address2:
              type: string
              description: second line of address. typically contains apartment info
              example: 'APT 505'
          address3:
              type: string
              description: third line of address
          city:
              type: string
              description: city associated to address
              example: Miami
          stateProvince:
              $ref: '#/definitions/StateProvince'
          postalCode:
              type: string
              description: postal or zip code associated to address
              example: '33133'
          country:
              $ref: '#/definitions/Country'
  StateProvince:
      title: StateProvince
      type: object
      properties:
          code:
              type: string
              description: code identifying state or province associated to address
              example: FL
          name:
              type: string
              description: name of state or province associated to address
              example: Florida
  Country:
      title: Country
      type: object
      properties:
          code:
              type: string
              example: US
          name:
              type: string
              example: United States
  LoyaltyProgram:
      title: LoyaltyProgram
      description: rewards program
      type: object
      properties:
          type:
              type: string
              description: loyalty program type
              example: Hotel Rewards
          membershipId:
              type: string
              description: account number
              example: HR6585421
  Phone:
      title: Phone
      type: object
      properties:
          type:
              type: string
              enum: [HOME,BUSINESS,MOBILE,FAX,OTHER]
              example: MOBILE
          number:
              type: string
              example: '555-555-1212'
  Email:
      title: Email
      type: object
      properties:
          type:
              type: string
              enum: [PRIVATE,CORPORATE,OTHER]
              example: PRIVATE
          address:
              type: string
              example: cguest@email.com
  Name:
      title: Name
      type: object
      description: name of profile holder
      properties:
          salutation:
              type: string
              description: salutation for guest
              example: Mr.
          first:
              type: string
              description: first name
              example: Christopher
          middle:
              type: string
              description: middle name or initial
              example: M
          last:
              type: string
              description: last name
              example: Guest
  IdDocument:
      title: IdDocument
      type: object
      description: identifying document for profile holder
      properties:
          type:
              type: string
              example: PASSPORT
          number:
              type: string
              example: '12345'
  Rate:
      title: Rate
      type: object
      properties:
          propertyId:
              $ref: '#/definitions/PropertyId'
          id:
              type: string
              description: rate code
              example: BAR
          sellDates:
              $ref: '#/definitions/TimeSpan'
          roomType:
              type: string
              description: room type
              example: STD
          category:
              type: string
              description: rate category
              example: STD
          marketCode:
              type: string
              description: rate marketing code
              example: DM
          sourceCode:
              type: string
              description: rate source code
              example: SRC
          status:
              type: string
              description: active status of rate
              example: ACTIVE
          yieldStatus:
              type: string
              description: is rate yieldable
              example: FULLY
          details:
              type: array
              items:
                  $ref: '#/definitions/RateDetail'
          repositoryCreated:
              type: string
              description: repository create date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          repositoryUpdated:
              type: string
              description: repository update date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
  RateDetail:
      title: RateDetail
      type: object
      properties:
          dates:
              $ref: '#/definitions/TimeSpan'
          rateCode:
              type: string
              description: detail rate code
              example: RACK
          marketCode:
              type: string
              description: rate marketing code
              example: DM
          sourceCode:
              type: string
              description: rate source code
              example: SRC
          packages:
              type: string
              description: packages included in rate
              example: ACTIVE
          roomTypes:
              type: array
              description: valid room types for rate
              example: K1,Q1
              items:
                  type: string
          daysOfWeek:
              type: array
              description: Days of the week for which the rate is valid
              example: 'FRIDAY,SATURDAY,SUNDAY'
              items:
                  type: string
          rates:
              type: array
              description: Rate amounts by number of guests and guest type
              items:
                  $ref: '#/definitions/RateInfo'
  RateInfo:
      title: Rate
      type: object
      properties:
          guests:
              type: integer
              description: rate occupancy
              example: 1
          guestType:
              type: string
              description: rate occupancy type
              example: Adult
          amount:
              type: number
              description: amount of rate
              example: '59.50'
  RoomRate:
      title: RoomRate
      type: object
      properties:
          effectiveDates:
              $ref: '#/definitions/TimeSpan'
          rateCode:
              type: string
              description: code identifying the rate
              example: AAA
          currencyCode:
              type: string
              description: currency code of revenue amount indicated
              example: USD
          amount:
              type: number
              example: 105.55
              description: rate amount
  Revenue:
      title: Revenue
      type: object
      description: details related to revenue
      properties:
          type:
              type: string
              description: classification of revenue indicated
              example: Room
          currencyCode:
              type: string
              description: currency code of revenue amount indicated
              example: USD
          amount:
              type: number
              example: 105.55
              description: rate amount
          date:
              type: string
              description: transaction date
              example: '2018-08-23'
  Service:
      title: Service
      type: object
      description: service or fixed charge related to reservation
      properties:
          id:
              type: string
              description: code that identifies service
              example: CRIB
          type:
              type: string
              description: service or fixed charge. defaults to SERVICE if not indicated
              example: FIXED_CHARGE
              enum: [SERVICE, FIXED_CHARGE]
          price:
              type: number
              example: 45
              description: cost of service
          currencyCode:
              type: string
              example: USD
              description: currency code of price indicated
          rateCode:
              type: string
              description: rate code of price indicated
          costType:
              type: string
              description: how is the service or charge priced
              example: PER_STAY
              enum: [PER_STAY, PER_NIGHT, PER_WEEK, PER_PERSON_PER_NIGHT]
          quantity:
              type: integer
              description: number of service or fixed charge items
              example: 1
          dates:
              $ref: '#/definitions/TimeSpan'
          comment:
              type: string
              description: Fixed charge additional information
              example: The fixed charge is applied to guest by request
  Allotment:
      title: Allotment
      type: object
      description: group block of inventory
      properties:
          propertyId:
              $ref: '#/definitions/PropertyId'
          id:
              type: string
              description: Block code and object id
              example: HOLIDAY2018
          status:
              type: string
              description: Block status
              example: ACTIVE
          blockName:
              type: string
              description: Block name
              example: CONFERENCE HOLIDAY 2018
          dates:
              $ref: '#/definitions/TimeSpan'
          marketCode:
              type: string
              description: code identifying marketing type for rate
              example: F
          sourceCode:
              type: string
              description: code identifying source of rate associated to block
              example: SRC
          channelCode:
              type: string
              description: code identifying booking channel for block
              example: SRC
          bookingMethod:
              type: string
              description: code identifying booking method for block
              example: IWEB
          billingType:
              type: string
              description: used to indicate if charges should be billed to master account
          includesFoodAndBev:
              type: boolean
              description: used to indicate whether food and drinks should be charged to master account
              example: true
          blockType:
              type: string
              description: type of block
              example: ELASTIC
          comments:
              type: array
              description: free text comments associated to block
              items:
                  $ref: '#/definitions/Comment'
          profiles:
              type: array
              items:
                  $ref: '#/definitions/Profile'
          inventoryBlocks:
              type: array
              items:
                  $ref: '#/definitions/InventoryBlock'
          repositoryCreated:
              type: string
              description: repository create date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
          repositoryUpdated:
              type: string
              description: repository update date in YYYY-MM-DDThh:mm:ss.sss format
              example: '2018-06-01T15:34:54.000'
  InventoryBlock:
      title: InventoryBlock
      description: inventory block detail for allotment
      type: object
      properties:
          roomType:
              type: string
              description: Room type
              example: KING
          rateCode:
              type: string
              description: code identifying rate for block
              example: AAA
          dates:
              $ref: '#/definitions/TimeSpan'
          cutoffDate:
              type: string
              description: >-
                  used to determine when the inventory block is released back into house inventory
              example: '2018-12-01'
          numberToBlock:
              type: integer
              description: number of rooms for this block per day per room type
              example: 2
          numberSold:
              type: integer
              description: number of rooms sold in block
              example: 5
          compRoomsNumber:
              type: integer
              description: number of comp rooms available in block
              example: 0
          pickUpStatus:
              type: string
              description: inventory count type
              example: PHYSICAL
          currencyCode:
              type: string
              example: USD
              description: code identifying type of currency associated to rate
          rates:
              type: array
              description: rate and occupancy detail for room type in block
              items:
                  $ref: '#/definitions/BlockRate'
  BlockRate:
      type: object
      properties:
          guests:
              type: integer
              description: number of guests
          occupancyProjected:
              type: integer
              description: projected occupancy for number of guests indicated
              example: 0
          amount:
              type: number
              example: 105.5
              description: rate amount
          includesTax:
              type: boolean
              example: true
              description: is indicated rate inclusive of tax
  Comment:
      type: object
      properties:
          type:
              type: string
              description: type or source of comment
              example: COMMISSION
          comment:
              type: string
              description: comment text
              example: group may use health club during their stay
  Error:
    title: Error
    type: object
    properties:
      timestamp:
        type: number
      status:
        type: integer
      error:
        type: string
      exception:
        type: string
      message:
        type: string
      path:
        type: string
    required:
      - timestamp
      - status
      - error
      - message
      - path
